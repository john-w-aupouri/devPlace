[{"/Users/John/Desktop/portfolio_projects/devPlace/client/src/App.js":"1","/Users/John/Desktop/portfolio_projects/devPlace/client/src/index.js":"2","/Users/John/Desktop/portfolio_projects/devPlace/client/src/pages/register.component.jsx":"3","/Users/John/Desktop/portfolio_projects/devPlace/client/src/redux/root-reducer.js":"4","/Users/John/Desktop/portfolio_projects/devPlace/client/src/redux/store.js":"5","/Users/John/Desktop/portfolio_projects/devPlace/client/src/pages/login.component.jsx":"6","/Users/John/Desktop/portfolio_projects/devPlace/client/src/redux/reducers/alert.js":"7","/Users/John/Desktop/portfolio_projects/devPlace/client/src/redux/actions/alert.js":"8","/Users/John/Desktop/portfolio_projects/devPlace/client/src/pages/landing.component.jsx":"9","/Users/John/Desktop/portfolio_projects/devPlace/client/src/redux/actions/types.js":"10","/Users/John/Desktop/portfolio_projects/devPlace/client/src/redux/reducers/auth.js":"11","/Users/John/Desktop/portfolio_projects/devPlace/client/src/redux/actions/auth.js":"12","/Users/John/Desktop/portfolio_projects/devPlace/client/src/utils/setAuthToken.js":"13","/Users/John/Desktop/portfolio_projects/devPlace/client/src/utils/api.js":"14","/Users/John/Desktop/portfolio_projects/devPlace/client/src/components/routing/private-route.component.jsx":"15","/Users/John/Desktop/portfolio_projects/devPlace/client/src/redux/reducers/profile.js":"16","/Users/John/Desktop/portfolio_projects/devPlace/client/src/redux/actions/profile.js":"17","/Users/John/Desktop/portfolio_projects/devPlace/client/src/components/layout/alert.component.jsx":"18","/Users/John/Desktop/portfolio_projects/devPlace/client/src/components/layout/navbar.component.jsx":"19","/Users/John/Desktop/portfolio_projects/devPlace/client/src/components/layout/spinner.component.jsx":"20","/Users/John/Desktop/portfolio_projects/devPlace/client/src/components/profile-forms/create-profile.component.jsx":"21","/Users/John/Desktop/portfolio_projects/devPlace/client/src/components/dashboard/dashboard.component.jsx":"22","/Users/John/Desktop/portfolio_projects/devPlace/client/src/components/profile-forms/edit-profile.component.jsx":"23","/Users/John/Desktop/portfolio_projects/devPlace/client/src/components/dashboard/dashboard-actions.component.jsx":"24","/Users/John/Desktop/portfolio_projects/devPlace/client/src/components/profile-forms/add-education.component.jsx":"25","/Users/John/Desktop/portfolio_projects/devPlace/client/src/components/profile-forms/add-experience.component.jsx":"26"},{"size":2226,"mtime":1612842175664,"results":"27","hashOfConfig":"28"},{"size":197,"mtime":1612127794423,"results":"29","hashOfConfig":"28"},{"size":2923,"mtime":1612517080531,"results":"30","hashOfConfig":"28"},{"size":223,"mtime":1612517149244,"results":"31","hashOfConfig":"28"},{"size":390,"mtime":1611519970345,"results":"32","hashOfConfig":"28"},{"size":1991,"mtime":1612517070782,"results":"33","hashOfConfig":"28"},{"size":431,"mtime":1609461308724,"results":"34","hashOfConfig":"28"},{"size":369,"mtime":1609633256385,"results":"35","hashOfConfig":"28"},{"size":1170,"mtime":1612637344098,"results":"36","hashOfConfig":"28"},{"size":1093,"mtime":1612813011292,"results":"37","hashOfConfig":"28"},{"size":1078,"mtime":1612252830926,"results":"38","hashOfConfig":"28"},{"size":1984,"mtime":1612600571083,"results":"39","hashOfConfig":"28"},{"size":322,"mtime":1611890494992,"results":"40","hashOfConfig":"28"},{"size":157,"mtime":1611520828358,"results":"41","hashOfConfig":"28"},{"size":631,"mtime":1612518101328,"results":"42","hashOfConfig":"28"},{"size":799,"mtime":1612815055761,"results":"43","hashOfConfig":"28"},{"size":2782,"mtime":1612853351340,"results":"44","hashOfConfig":"28"},{"size":458,"mtime":1612638440246,"results":"45","hashOfConfig":"28"},{"size":1554,"mtime":1612580820321,"results":"46","hashOfConfig":"28"},{"size":206,"mtime":1612597790177,"results":"47","hashOfConfig":"28"},{"size":7233,"mtime":1612819743666,"results":"48","hashOfConfig":"28"},{"size":1484,"mtime":1612756135188,"results":"49","hashOfConfig":"28"},{"size":8422,"mtime":1612819738152,"results":"50","hashOfConfig":"28"},{"size":610,"mtime":1612755142106,"results":"51","hashOfConfig":"28"},{"size":3444,"mtime":1612857846825,"results":"52","hashOfConfig":"28"},{"size":3427,"mtime":1612853562155,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1kysyzt",{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/John/Desktop/portfolio_projects/devPlace/client/src/App.js",[],"/Users/John/Desktop/portfolio_projects/devPlace/client/src/index.js",[],["113","114"],"/Users/John/Desktop/portfolio_projects/devPlace/client/src/pages/register.component.jsx",[],["115","116"],"/Users/John/Desktop/portfolio_projects/devPlace/client/src/redux/root-reducer.js",[],"/Users/John/Desktop/portfolio_projects/devPlace/client/src/redux/store.js",[],["117","118"],"/Users/John/Desktop/portfolio_projects/devPlace/client/src/pages/login.component.jsx",[],"/Users/John/Desktop/portfolio_projects/devPlace/client/src/redux/reducers/alert.js",[],"/Users/John/Desktop/portfolio_projects/devPlace/client/src/redux/actions/alert.js",[],"/Users/John/Desktop/portfolio_projects/devPlace/client/src/pages/landing.component.jsx",[],"/Users/John/Desktop/portfolio_projects/devPlace/client/src/redux/actions/types.js",[],"/Users/John/Desktop/portfolio_projects/devPlace/client/src/redux/reducers/auth.js",[],"/Users/John/Desktop/portfolio_projects/devPlace/client/src/redux/actions/auth.js",[],"/Users/John/Desktop/portfolio_projects/devPlace/client/src/utils/setAuthToken.js",[],"/Users/John/Desktop/portfolio_projects/devPlace/client/src/utils/api.js",[],["119","120"],"/Users/John/Desktop/portfolio_projects/devPlace/client/src/components/routing/private-route.component.jsx",[],"/Users/John/Desktop/portfolio_projects/devPlace/client/src/redux/reducers/profile.js",[],"/Users/John/Desktop/portfolio_projects/devPlace/client/src/redux/actions/profile.js",[],"/Users/John/Desktop/portfolio_projects/devPlace/client/src/components/layout/alert.component.jsx",[],["121","122"],"/Users/John/Desktop/portfolio_projects/devPlace/client/src/components/layout/navbar.component.jsx",[],["123","124"],"/Users/John/Desktop/portfolio_projects/devPlace/client/src/components/layout/spinner.component.jsx",[],"/Users/John/Desktop/portfolio_projects/devPlace/client/src/components/profile-forms/create-profile.component.jsx",[],"/Users/John/Desktop/portfolio_projects/devPlace/client/src/components/dashboard/dashboard.component.jsx",["125"],"/Users/John/Desktop/portfolio_projects/devPlace/client/src/components/profile-forms/edit-profile.component.jsx",["126"],"import React, { Fragment, useState, useEffect } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createProfile, getCurrentProfile } from '../../redux/actions/profile';\n\nconst EditProfile = ({\n  profile: { profile, loading },\n  createProfile,\n  getCurrentProfile,\n  history,\n}) => {\n  const [displaySocialInputs, setDisplaySocialInputs] = useState(false);\n  const [formData, setFormData] = useState({\n    company: '',\n    website: '',\n    location: '',\n    status: '',\n    skills: '',\n    githubusername: '',\n    bio: '',\n    twitter: '',\n    facebook: '',\n    linkedin: '',\n    youtube: '',\n    instagram: '',\n  });\n\n  useEffect(() => {\n    getCurrentProfile();\n\n    setFormData({\n      company: loading || !profile.company ? '' : profile.company,\n      website: loading || !profile.website ? '' : profile.website,\n      location: loading || !profile.location ? '' : profile.location,\n      status: loading || !profile.status ? '' : profile.status,\n      skills: loading || !profile.skills ? '' : profile.skills.join(','),\n      githubusername:\n        loading || !profile.githubusername ? '' : profile.githubusername,\n      bio: loading || !profile.bio ? '' : profile.bio,\n      twitter: loading || !profile.social ? '' : profile.social.twitter,\n      facebook: loading || !profile.social ? '' : profile.social.facebook,\n      linkedin: loading || !profile.social ? '' : profile.social.linkedin,\n      youtube: loading || !profile.social ? '' : profile.social.youtube,\n      instagram: loading || !profile.social ? '' : profile.social.instagram,\n    });\n  }, [loading]);\n\n  // Destructure State\n  const {\n    company,\n    website,\n    location,\n    status,\n    skills,\n    githubusername,\n    bio,\n    twitter,\n    facebook,\n    linkedin,\n    youtube,\n    instagram,\n  } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    createProfile(formData, history, true);\n  };\n\n  return (\n    <section style={{ backgroundColor: 'white' }}>\n      <div style={{ padding: '7px' }}>\n        <h1 className='large text-primary'>Edit Profile</h1>\n        <p className='lead'>\n          <i className='fas fa-user'></i> Let's edit some information\n        </p>\n        <small>* = required field</small>\n        <form className='form' onSubmit={(e) => onSubmit(e)}>\n          <div className='form-group'>\n            <select name='status' value={status} onChange={(e) => onChange(e)}>\n              <option value='0'>* Select Professional Status</option>\n              <option value='Developer'>Developer</option>\n              <option value='Junior Developer'>Junior Developer</option>\n              <option value='Senior Developer'>Senior Developer</option>\n              <option value='Manager'>Manager</option>\n              <option value='Student or Learning'>Student or Learning</option>\n              <option value='Instructor'>Instructor or Teacher</option>\n              <option value='Intern'>Intern</option>\n              <option value='Other'>Other</option>\n            </select>\n            <small className='form-text'>\n              Give us an idea of where you are at in your career\n            </small>\n          </div>\n          <div className='form-group'>\n            <input\n              type='text'\n              placeholder='Company'\n              name='company'\n              value={company}\n              onChange={(e) => onChange(e)}\n            />\n            <small className='form-text'>\n              Could be your own company or one you work for\n            </small>\n          </div>\n          <div className='form-group'>\n            <input\n              type='text'\n              placeholder='Website'\n              name='website'\n              value={website}\n              onChange={(e) => onChange(e)}\n            />\n            <small className='form-text'>\n              Could be your own or a company website\n            </small>\n          </div>\n          <div className='form-group'>\n            <input\n              type='text'\n              placeholder='Location'\n              name='location'\n              value={location}\n              onChange={(e) => onChange(e)}\n            />\n            <small className='form-text'>\n              City & state suggested (eg. Boston, MA)\n            </small>\n          </div>\n          <div className='form-group'>\n            <input\n              type='text'\n              placeholder='* Skills'\n              name='skills'\n              value={skills}\n              onChange={(e) => onChange(e)}\n            />\n            <small className='form-text'>\n              Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\n            </small>\n          </div>\n          <div className='form-group'>\n            <input\n              type='text'\n              placeholder='Github Username'\n              name='githubusername'\n              value={githubusername}\n              onChange={(e) => onChange(e)}\n            />\n            <small className='form-text'>\n              If you want your latest repos and a Github link, include your\n              username\n            </small>\n          </div>\n          <div className='form-group'>\n            <textarea\n              placeholder='A short bio of yourself'\n              name='bio'\n              value={bio}\n              onChange={(e) => onChange(e)}></textarea>\n            <small className='form-text'>Tell us a little about yourself</small>\n          </div>\n\n          <div className='my-2'>\n            <button\n              onClick={() => setDisplaySocialInputs(!displaySocialInputs)}\n              type='button'\n              className='btn btn-light'>\n              Add Social Network Links\n            </button>\n            <span>Optional</span>\n          </div>\n\n          {displaySocialInputs && (\n            <Fragment>\n              <div className='form-group social-input'>\n                <i className='fab fa-twitter fa-2x'></i>\n                <input\n                  type='text'\n                  placeholder='Twitter URL'\n                  name='twitter'\n                  value={twitter}\n                  onChange={(e) => onChange(e)}\n                />\n              </div>\n\n              <div className='form-group social-input'>\n                <i className='fab fa-facebook fa-2x'></i>\n                <input\n                  type='text'\n                  placeholder='Facebook URL'\n                  name='facebook'\n                  value={facebook}\n                  onChange={(e) => onChange(e)}\n                />\n              </div>\n\n              <div className='form-group social-input'>\n                <i className='fab fa-youtube fa-2x'></i>\n                <input\n                  type='text'\n                  placeholder='YouTube URL'\n                  name='youtube'\n                  value={youtube}\n                  onChange={(e) => onChange(e)}\n                />\n              </div>\n\n              <div className='form-group social-input'>\n                <i className='fab fa-linkedin fa-2x'></i>\n                <input\n                  type='text'\n                  placeholder='Linkedin URL'\n                  name='linkedin'\n                  value={linkedin}\n                  onChange={(e) => onChange(e)}\n                />\n              </div>\n\n              <div className='form-group social-input'>\n                <i className='fab fa-instagram fa-2x'></i>\n                <input\n                  type='text'\n                  placeholder='Instagram URL'\n                  name='instagram'\n                  value={instagram}\n                  onChange={(e) => onChange(e)}\n                />\n              </div>\n            </Fragment>\n          )}\n\n          <input type='submit' className='btn btn-primary my-1' />\n          <Link className='btn btn-light my-1' to='/dashboard'>\n            Go Back\n          </Link>\n        </form>\n      </div>\n    </section>\n  );\n};\n\nEditProfile.propTypes = {\n  createProfile: PropTypes.func.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n});\n\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\n  withRouter(EditProfile)\n);\n","/Users/John/Desktop/portfolio_projects/devPlace/client/src/components/dashboard/dashboard-actions.component.jsx",[],"/Users/John/Desktop/portfolio_projects/devPlace/client/src/components/profile-forms/add-education.component.jsx",[],"/Users/John/Desktop/portfolio_projects/devPlace/client/src/components/profile-forms/add-experience.component.jsx",[],{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"127","replacedBy":"131"},{"ruleId":"129","replacedBy":"132"},{"ruleId":"127","replacedBy":"133"},{"ruleId":"129","replacedBy":"134"},{"ruleId":"127","replacedBy":"135"},{"ruleId":"129","replacedBy":"136"},{"ruleId":"127","replacedBy":"137"},{"ruleId":"129","replacedBy":"138"},{"ruleId":"127","replacedBy":"139"},{"ruleId":"129","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":20,"column":6,"nodeType":"143","endLine":20,"endColumn":8,"suggestions":"144"},{"ruleId":"141","severity":1,"message":"145","line":47,"column":6,"nodeType":"143","endLine":47,"endColumn":15,"suggestions":"146"},"no-native-reassign",["147"],"no-negated-in-lhs",["148"],["147"],["148"],["147"],["148"],["147"],["148"],["147"],["148"],["147"],["148"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCurrentProfile'. Either include it or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["149"],"React Hook useEffect has missing dependencies: 'getCurrentProfile', 'profile.bio', 'profile.company', 'profile.githubusername', 'profile.location', 'profile.skills', 'profile.social', 'profile.status', and 'profile.website'. Either include them or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["150"],"no-global-assign","no-unsafe-negation",{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},"Update the dependencies array to be: [getCurrentProfile]",{"range":"155","text":"156"},"Update the dependencies array to be: [getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.skills, profile.social, profile.status, profile.website]",{"range":"157","text":"158"},[550,552],"[getCurrentProfile]",[1662,1671],"[getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.skills, profile.social, profile.status, profile.website]"]